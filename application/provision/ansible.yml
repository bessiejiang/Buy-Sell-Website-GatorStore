---
- hosts: all
  become: yes
  vars:
    nodejs_version: "10"
    ubuntu_release: "bionic"
    webserver_port: "1648"

  handlers:
    - name: Restart nginx
      service:
        name: nginx
        state: restarted

  tasks:
    - name: Install the gpg key for nodejs LTS
      apt_key:
        url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"

    - name: Install nodejs LTS repos
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_{{ nodejs_version }}.x {{ ubuntu_release }} main"

    - name: Install packages
      apt:
        name: "{{ packages }}"
      vars:
        packages:
          - git
          - nodejs
          - mysql-server
          - libmysqlclient-dev
          - nginx
          - htop
          - python-pip

    - name: Install python packages
      pip:
        name: "{{ packages }}"
      vars:
        packages:
          - MySQL-python

    - name: Remove default nginx conf
      file:
        state: absent
        path: /etc/nginx/sites-enabled/default

    - name: Add custom nginx conf
      template:
        src: nginx.conf.template
        dest: /etc/nginx/sites-enabled/webserver.conf
      notify: Restart nginx

    - name: Disable Ubuntu news in login message (motd)
      lineinfile:
        path: /etc/default/motd-news
        regexp: "^ENABLED="
        line: ENABLED=0

    - name: Disable Ubuntu livepatch in login message (motd)
      file:
        path: /etc/update-motd.d/80-livepatch
        mode: a-x

    - name: Removes mysql anonymous user
      mysql_user:
        name: ""
        host: localhost
        state: absent

    - name: Create mysql csc648 user
      mysql_user:
        name: csc648
        password: csc648
        priv: "*.*:ALL"
        state: present

    - name: Create mysql csc648 database
      mysql_db:
        name: csc648
        state: present

# host webserver is only run for production
- hosts: webserver
  become: yes
  vars:
    remote_repo_path: "/home/csc648/csc648-fall2019-Team12"

  tasks:
    - name: Create git folder
      command: "git init --bare {{ remote_repo_path }}.git"
      args:
        creates: "{{ remote_repo_path }}.git/HEAD"
      become_user: csc648

    - name: Copy post-receive hook
      template:
        src: post-receive.template
        dest: "{{ remote_repo_path }}.git/hooks/post-receive"
        owner: csc648
        group: csc648
        mode: u=rwx,g=rx,o=rx

    - name: Create git working directory
      file:
        path: "{{ remote_repo_path }}"
        state: directory
        owner: csc648
        group: csc648

    - name: Install Node.js pm2
      npm:
        name: pm2
        global: yes

    - name: Start the server with pm2
      command: pm2 start src/server.js --name webserver
      become_user: csc648
      args:
        chdir: "{{ remote_repo_path }}/application"
        creates: /home/csc648/.pm2/pids/webserver-0.pid

    - name: Generate pm2 startup script
      command: "env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u csc648 --hp /home/csc648"
      args:
        creates: /etc/systemd/system/pm2-csc648.service

    - name: Save pm2 server list
      command: pm2 save
      become_user: csc648
      args:
        creates: /home/csc648/.pm2/dump.pm2

# host default is only run for vagrant
- hosts: default
  become: yes
  tasks:
    - name: Change default folder for ssh
      lineinfile:
        path: /home/vagrant/.bashrc
        line: cd /vagrant

    - name: Create node_modules folder
      file:
        path: /home/vagrant/node_modules
        state: directory
        owner: vagrant
        group: vagrant

    - name: Create node_modules symlink
      file:
        src: /home/vagrant/node_modules
        dest: /vagrant/node_modules
        state: link
